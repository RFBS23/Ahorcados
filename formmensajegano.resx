<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIAA2GAAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAFv
        ck5UAc+id5oAABfwSURBVHja7d0HdFR12sdxU0gjhBBCQgkQapAq0lRUioJCKIIUcZGyUhR4gWUFXMuC
        YMEurtIWKa8goIKibECKVKlCQmiBJHQIIlUkgKLP3v+dxAUMzJ3JZGbu3O+c8zvHI8nktudz27/cdlv+
        PrW0TNFyWMtVLUIKJFdztvFkLTXzuc/CtPTWsk7LhZyszfl/YRwPljsenP400LKJneH2bMrZ9s58QrWM
        1nI+j+89n/NvoRwPljkenP5EaUli43ssSTn7wNFP15wz/s2+V/1bF44HyxwPTn/a2DmQSMFGbfvWPbo9
        cptc2Gc382d/kHv2X2Dgu9XPhC745END3/2EtgzaJ5HjwePHQ6I7ARjORvds4kqXHCsiJbUijLMbOVH6
        pecH1w0MDMiw973az6S/9PyQuup3jH23lCxTOnYs+8TjGe5OAEaxwT2bl//5t/Nyef8RrQjt52LGkaP7
        1h6vXLG83QdzlSuVv6p+Vv2Ooe/WlmHsi0PPs088nlHuBGA0G9xzCQ8Pk/98PkUkO1O0IrSfn9Pl4g/b
        pUPbFna/u2O7lvrPqt8x9N3aMiz6bIqEFw5j33g2owHAImnVsomcPrzFeJGqXMyQeTPH63jcHJbC+s+o
        nzX8vdoyqGVp1eJ+9g0AkIJOg3q1ZfPq+Y4VaU6hZv+4Q/757KA8z9aq+NW/XdJ+xiFYcnDZvOpzaXBn
        LfYRAPwvEUXCJa5MSfXAiuQj5cuWlob168jIYf0kbds3jhfoDQjMm/mefjuQUKWCng7tWuhn/mxniv+a
        71bLppaxYf3a+jKz7/IZrXZUDZkWgGGDesuJzPVyZO8a4mzS1sjRvWvl1KHN8tv5NMfP/HkUqvoOdZ+f
        lfGdHv2eX32vs8V/zZWAWka1rGqZ1bKzD52Pqh1VQ6YFYPRzg0WuHLQdXCR/yW9x5glBTgrku9ln+Y5W
        O6qGTAzA/4lc3u/ag4sQq0SrHVVDAEAIAAAAIQAAAIQAAAAQAgAAQAgAWByAP15p8eqIeDIufqUKAMbe
        N2efTJWsDBocEc/mePp3ciErxXXtNgDg1sV/5fQu+XLuBOncoZVUq1qJZsfEo812K1cqL4kPNZXpE8fZ
        IMgvAgBws+LfJ7+c2S1vvjxSIotG0BGEeFVCQoJlyNM95afj2/KHAADcrA96hiQtmCpRxSI54IhXJjgo
        SCaNHwMALgcg59K/V/eOHGjEq9Pk3oZy9uj3ziMAAHkDoHqbNapfh4OMeHXKlIqVjNTlzvfgBIC8Afhh
        /wapVaMqBxnx6sSUKC47Ni0CgAIBoDoAEO8HIHUjAHAFQAAAAACAAAAAuBEAf38/iY0KlbjYcImLKUyI
        CxIupaLDpFCgPwB4OwDRkSGybGJbObakhxxZTEj+o46l5DmdpVp8JAB4OwAx2tl/56ddRVIGiiQPICT/
        SRkgJ1f0llqViwOAGQBIndfVtuO2Pk1I/rNtgPywrJcGQBQAAAABAAAAAAIAAAAABAAAAAAIAAAAABAA
        AABeAxJeAwIADYEIDYEAgKbAhKbAAEBnIEJnIAAAAAIAAMCAIAQAAIArAMKQYADAoKDEV1KmdKxkpq4A
        gIIYFrx390c5yIhXp+l9aljwrQwLXhATgyxWE4NEMTEI8d6JQSYzMUgBTw32ykiJjGRqMOJdCVVTgw1g
        ajC3TA66cN5E6dKxtdyecMPkoNp/x8ZEi7+//QYbqlGHatyhGnnctAFIbLjeqEg1LrL7fYUCpVTJmHxP
        VlpW+/2SscbW4cb4+fnp6+/1E6Zqy6e2VWBgoN11CtC2g9euk7ZMVSrFS+LDTWXGpHFy4QSTg7p1evAT
        mddPD34sfZ0s/3qmRBcvZnc5VbNO1bzzVk2G1b+pZsWqebHd76taUZLXL5Rj+9Y6PdX0Ue139+/8VoYP
        6SNBQYUcA8DvNun6aGvZ9f1iObp3rVdPqX1s3zrZtu5LqVyxvN31KhEdJSuTPtZ/x2unBz/B9ODuA+A6
        CGwY/JFL+2Xn5iTtjGG/04bq2KE6eKiOHjfvBDJQ71ikOhjZ/b4aCXLywEaR7Mzrl8lotN+7em6PvP/m
        C07NfqyKXwHo9N93Z7RlVK911RWcvfVSV0Np277R9613rk+6awofAFwQbYeod7DqXax9AKL0Lp6qq+dN
        u4FqCKiuxcYAqKof1E4dDNrvqOcb773+vEREhDtf/M6+enL7fkqXrIz1hgHYrV3VmGbdAAAAKH4AAAAA
        oPgBAAAAgOIHAAAAAIofAAAAACxf/AAAAJYFgOIHAACwKAAUPwAAgEUBoPgBAAAsCgDFDwAAYFEAKH4A
        AACLAkDxAwAAWBQAih8AAMCiAGRnUPwAAACWA6B6Vb078K/n9lD8AAAAVgOgdo0EfSCO8W++QPHbHd8x
        U8fSKAB7k5faxgMAAADwVgASqlSU5555SiKLFnF4GK/HOiX6fvGrZyNa4f92Pk2Oa+s6d8Z7UqpkCbvb
        J6JIuEwaP0YO7Vktv57dYxvwxJUDcAAAALgCADWEV3BwkMPF361TG31YKZ8u/uwMufTjDlnzzScybFBv
        /XlJeHiYvv5GtlNYaKhUrVJBnnqymyz54iPbEFzZGb4JAQCYEwBnBvBUZ36fLn7tXv+qdsbfsOJT6fH4
        I4bGarSXohFFpEPbFrLky2n6ALE+t+0AwPcBsEbxZ+j3+aOfGyxlSsW6HFA1P8SQp3vKgV0rfWsbAoBv
        A2CV4k/Z8JUkPtRUAgL8XV7816bxXfVk1eJZvnM7AAC+DYAVLvtXLZ4td9S+3W2TclSsUFYWzP4AAADA
        ewGwxNN+bb3U2djI6z1XJ650rMxXCJj9SgAAfA8AP7/cM79vF//2DV9L3TrVPTY9V4X4OH0SEVNvYwDw
        LQDUmV818jnu4237fzy4Sdq1bu7xOfrublRXMnesMO+2BgDfAeB/Z37ffs//2/m9MvbFoRIQEODUdgoI
        CpaQYsUlLLaUFI4tLSFR0RIY4jy6A/t1l8und5rzdgAAfAMA2z2/NRr5bPz2M31SU4e2kbZ9isZXlhpP
        9Jfm42dIh6/WSbe1e6TbujTp+J+N8uCE2VK7zxCJSqghfg7ComaPXvTZZFtjIQAAAHcDYJkWftoZVp1p
        /9qjk2NTaUfHSN2BI6Trt9ul7/6L8tSRX6X/4V+0XPkj6v/1O5CtgbBXGo4cK0Xiyjn0N9SMveePbTPf
        VQAAmBsAq1z253bqUa381PTdhhvwVK0uD0//Qi98Vej9Dl66ZXJ/pt3n30rJBvcY/jvh4YVl4bxJtr4D
        AAAA7gDAUsWv5fef9sqzw/obLspiWvG3n79SP9v3O3TZbvFfB8GRX6Tz8mSHEOj5eAdbc2EzXQUAgDkB
        8Pf39/1XfTdc/qsBUOrVrWHoYFUP9h6a+rmt+B0o/BsRaL9gpRQpG2/ob8aXj5N9KUvNtT8AwJwAqNZo
        +1S/dbNdcubj8n/Fopl65xwjx0XtfkOlb+bPDp/5/xTt9+96fpz4BwTa/ZvBQUEya+pbIpcyAQAACn5I
        MNX5xaf7qt8AwFuvPmvoQC0SV146L92ar7P/tc8E/rIxQ6Jr3mHob/998F95BgAABQ9AzepOTA9u4qjB
        Ofr26mroQE3o0lP6ZFzQCvhyvgHITd1BIw397TatmtnGDzDLfgEAADDD/f9PWcnSqsX99p+NBAbK/eMm
        2F7ruaj41bOAh6ctkEJh9odeU52STHVlBgAAYAYATh3aJA3r1bY/UlJEpLSdu1QvWpcBoN0GdPl2u4TF
        2G98VC6ulBxJW2OeB4EAAABmeQOgnnvYbfRTvIR0WrLF0Dt/RwDovnm/RJSvaPfvq3EH07cvAwAAAABX
        dv45kblBatxexfsBiC1hrleBAAAAZrgCUL3/GtxZy+AtwDcevQU4vGc1AAAAAPjeQ8DCPAQEAADwTBfg
        NHm67+PGXgN27mF7DXjIha8BB44w9LfVCMIXf9gOAAAAAC7NpUx5Z9xznmkItCFDomsYawg0fGgf+gIA
        AAAUREvAlUmz9L737m8K/JqhpsAhwcEyZ/q7NAUGAAAokAeB2r21kbYALu0MNN94Z6BKFcqZb3gwAAAA
        M3UHVvMhuq078LJtDnUH7v3Eo3LlDN2BAQAACmw4sC1rFkipkjHGBwRJqKE/we+7/2cHBwRZIbH17zb8
        d9Skoknz/82AIAAAAAV5G6AG3Ojbq4tjQ4IVLyF3DHhGuqzYrkNw6yHB0qThiDESXsaxIcHatmou548z
        JBgAAECBb/PvtauA8mVLOzwoaER8JanevZ80e2+6dFi4Vrqt2S3d1qZJx0Ub5MEPZ0mtPoP12wY/f8cG
        BY0qFqnPIsygoAAAAG56FvDKqGES6IJhwVXUA8OAkBCnhwUf/FQP8w0FBgAAYO7egZulQ7uWHp8Y5L57
        6stBM88YDAAAYNZbgdSNi6Re3ZoeK3712m/1ktlMDQYAAOCp7b9u2VxDvQRdHTUxyZdzJzI5KAAAgKcR
        WKOdhY02EHJFEqpUsBU/04MDAAB4fqwAtf/VLL3x5csUePEXj4qUOTPetT3x94Xh2AEAAMz6IFBtf/Uw
        8P+nvCHN7r9Lb4tf0AAUCgyU+nVrynuvPy+H1dBfOcsBAAAAAG4sfDVAyMzJb0jT+xpphR/k9mcAambi
        O+tUl3d1CFabFwIAAAAzFb4abGPaxNfk/sYNJNgDhX8zCN557R9ycPcq80EAAABA4bsAAn9/qVOrmj55
        iakgAAAA8ObCV+s4bYL3Fv5NIXhlpK2BkLdDAAAA4HVP9XMK/98fvCKN766nz7nn7YV/MwjeGDtCDuz0
        YggAAAC854yvhv9ebyv8u+6UoKBCLivIwMBA7X7d39Csy4UKue7vqu+rVSNBXh87XA7kXhF40z4DAADw
        huK/fGqnzJ72ttzdqK4EubAAFSJN7m0or48ZLvHlyhh6z//qqGGS+FBTKVw4zKUQ1K5ZTSa8O1ouZCV7
        z34DAADwhok/3371WSlSpLDLCk49L1DPDT768FX9laF6iHh7QiW7v1cyNlr2Ji/Vi3T+7A+kdcsmGgSh
        Ll2uEX/rK9knU71j3wEAAHh6lJ+1S+foheeqAlM99KZPHKePIajfd2dn6rcWhgCIiZbd3y+2jeyjLdu5
        Y1vl81n/kjYPN5NwF10RFAkvrOPiFeMHAAAAeDrPDuuX76JSrQDVpf6MSa/bJuZQhZ+7bS6mS1bGesNX
        ADoAuQ/s1HdoGKjRflTRtk98QMLD8w9Bz8c7eMcYAgAAAJ6898/+MVU6d2jlfOGHBEvT+xrqrQLVpf51
        hX/NmwWnAbj2IaUGgZqh6ItPPtQgeFA/kzu73PfeXV/OHNkCAABgbQCunN4p3R9r72ThN9L7Aaj+AHkW
        visByAuCORPkkTbOQfBA03v02wsAAABr3wJo21A1o/Xz8zM2wKdW+M2b3CWzpr5lv/ALAoA8IFBdg9WU
        YGpkYKMAPDPkSX1oM54BAIDlAchIXS533lHj1oUfGiIPNrtHZn/0tpxWhZ+dYXzdCwKAGyC4cCJFFs6b
        pF8R2IOgQnxZ2bJ6gXc0DAIAAPCGW4FlX8/QW87duJ5hYaHSonlj+WTaO3Lm8BbHCt8dANwIQVaKfPXp
        ZP2KoGjEnyGoVLGczJs5Xjv70xAIAADgugJK27ZExrwwVB9jX53t+/TqIp99/L7tYZkzhe9OAPK4Ikha
        MFUG9e8uLR+4V1q1bCL/+Ht/2bbuS5oCAwAA3Gx7qvX5WSuec8e2ya9nd9vex+d3Hd0JwA0QXD2Xpr9C
        VM8Kfs9dRwAAAACwUzx6XNfByO0A5LU+9AYEAADwTA9DjwLAeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQIED
        AAAAAAEAAAAAAgAAAAAEAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmBKAE5nGAdizdQkAAAAA+A4AGfoVQEKVina3a2xM
        cdm1JUkkOxMAAAAATB9t+1w9lyaTxo+R8PDCdrdrUFAh/Zi69OMOa2xbAAAA3y7+PTLlXy9L8ahIowe5
        hIWFyJgXhlgDAQAAAIo/DwRCLYIAAAAAxW9hBAAAACh+CyMAAABA8VsYAQAAAIrfwggAAABQ/BZGAAAA
        gOK3MAIAAAC+UPxRThR/q5ZNpFunNhIQEOAYAmGhMvbFob6BAAAAgBXP/G1bNZeDu1fJ6cOb5ckenSXA
        39+aVwIAAABWLP4Du1baOvxoOXVok3URAAAAsGzxX7MfLYsAAACApYvf6ggAAABYvvitjAAAAADFb2EE
        AAAAKH4LIwAAAEDxWxgBAAAAit/CCAAAAFD8FkYAAACA4rcwAgAAABS/hREAAACg+C2MAAAAgNmLv11r
        NxS/ryIAAADgDZk55Q0ni/8BObhrlXtn8skPAmGh8sbLI+TXs7sBAAAAQG3D5O8WSsUK5cxR/C5AoER0
        lCz/eoZIdgYAAIDFAdCW/6XnBpur+F2AQP8nH9OuAvYAAABYGABt2dX98GOdEh0qnvaJD+qDeXjFBJ5/
        INDJIQTub9xAzh753vP7DwAAwKMAnNqhD8tl+MyfqM78K71r9l4nrgSa3NtQzh4FAACw/DOAdH18PdMW
        v5MIDOj7F/3NB7cAAGD5h4CpGxdJ1crx5i3+PBDwvwUCsTHRsjLpYx4CAgAA5GbezPFSrmzpP61nYGCA
        dOnY2vuL/1oEDm6Sp/s8LiEhwX9an+jixeSDt0d5x9kfAADAW/L7T3tl3bK50rd3V6lbu7okVKkgLZo3
        lvffelE7q242R/Ffc1xcyEqW6RPHSZtWzaRa1YpSq0aCdH+svSz54iNbGwAaAgEAAPx5e/5yZrecPLBR
        sjK+k/PHt9nWz4zrqJZZQXAiRVuX9fq+unxqp/dBBgAA4F2Fk1s86T7TzPmPdaE3IAAAAAEAAAAAAgAA
        AAAEAAAAAAgAAAAAEAAAAAAgAAAAAEAAAAAAgAAAAAAAAQAAAAACAAAAAAQAAAAACAC4GIDczhuq15a9
        XNovOzcnSWyMEQCKy8kVvUVSBuiFnmdSBsrOT40BUEsDQPWak+xMY8vqK51rCAAUCAC53TezUuR4+ndy
        ZO8auzmWvk6Wfz1TH+TB3nJWi4+U5Dmd5diSHnJkcd5R/7ZsYluJjgyx+30JVStK8vqFcmzfWkPLmpW5
        XrJPptowAAICANcXvyp8NYBD4kNNpXKl8hJXpqTElbYT7WfU8E7+BsaAKxToL6WiwyQuJlxL4bwTGy6x
        2tnf39/P/vcVCpRSJWMML2e1qpWkc4dWsnDuRLlyehcIEADILf6fjifLkAE98xzCydcSWTRCn5nmlzO7
        bH3vKQIAsDoAk8aPkeCgIJ8v/txEFYuUxQumeseglAQAPAaAVvxqbHY1RrtVij83vbs/yq0AsTgAFzMk
        I3W5lCkVazkAGtWvYxtsEwAAwMoAGH2P72uhHQEBAAAAAAAAAACgEAAAAACAAAAA5KMhj6fjQEMiACAA
        4AAARpryejqONCUGAAIADvXmM9CZx9NxoDMRABAAcHV3Xk+H7sQEAAAAAAgAAAAAEAAAAAAgAAAAAEAA
        AAAAgAAArwEBgAAADYEAAAAAgKbAFAIAAACdgQgAAAAAEAAAAAAgAAAAAEAAwJcByExdIWVKW3BQ0AYM
        CkoYFlzOHt0qTe6z4LDgTzwqV84wLDgAMDGITH5/rAQHW2hikKhIWfwFE4MQALBNDZaVLEMH9rLE1GDF
        IiPkzZdHMjUYAYDrJgc9kSIzJo2TxIebSpVK8cYm3TRLtHW5PaGSdOnYWhbOm8SMQAQA8kJAnx78hPHp
        wc2UE0wPTgDAKAQ2DHwr6RQ+AQBCCAAQQgCAEAAAAEIAAAAIAQAAIAQAzAPAYJErB33wtR0hbohWO6qG
        TAvAsEG99UYuvtZwhxB3NRBTNWRaACKKhPtWs11C3NxMXNWQaQEghLgtAEAIAAAAIQBQwJ9RbHBCvCqj
        3AnAcDY4IV6VZ9wJQKKWC2x0QrwiF3Jq0m2fKC1JbHhCvCJJOTXp1k8DLZvY+IR4NBu11L/NQ5+aWiZp
        OaTlKjuDELfkak7NTcqpQac//wUR2j67XtLUQgAAAABJRU5ErkJggg==
</value>
  </data>
</root>